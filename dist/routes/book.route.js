"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bookRouter = void 0;
const express_1 = require("express");
const controllers_1 = require("../controllers");
const middlewares_1 = require("../middlewares");
const book_schema_1 = require("../schema/book.schema");
const bookRouter = (0, express_1.Router)();
exports.bookRouter = bookRouter;
bookRouter.post("/", (0, middlewares_1.validateData)(book_schema_1.BookSchema), middlewares_1.authMiddleware, middlewares_1.adminMiddleware, controllers_1.addBook);
bookRouter.get("/", middlewares_1.authMiddleware, controllers_1.getBooks);
bookRouter.get("/borrow/retrieve", middlewares_1.authMiddleware, controllers_1.getBorrowedBooks);
bookRouter.get("/borrow/retrieve-all", middlewares_1.authMiddleware, middlewares_1.adminMiddleware, controllers_1.getAllBorrowedBooks);
bookRouter.get("/:id", middlewares_1.authMiddleware, controllers_1.getBookById);
bookRouter.patch("/:id", (0, middlewares_1.validateData)(book_schema_1.BookSchema), middlewares_1.authMiddleware, middlewares_1.adminMiddleware, controllers_1.updateBook);
bookRouter.delete("/:id", middlewares_1.authMiddleware, middlewares_1.adminMiddleware, controllers_1.deleteBook);
bookRouter.post("/borrow", middlewares_1.authMiddleware, controllers_1.borrowBook);
bookRouter.post("/return", middlewares_1.authMiddleware, controllers_1.returnBook);
bookRouter.post("/renew", middlewares_1.authMiddleware, controllers_1.renewBook);
